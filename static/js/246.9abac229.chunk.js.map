{"version":3,"file":"static/js/246.9abac229.chunk.js","mappings":"uKACA,MAAyB,uB,SCIzB,EAHe,SAAC,GAAkC,IAAhCA,EAA+B,EAA/BA,SAA+B,IAArBC,KAAAA,OAAqB,MAAf,SAAe,EAC7C,OAAO,mBAAQA,KAAMA,EAAMC,UAAWC,EAA/B,SAA+CH,GACzD,C,yFCHD,EAA0B,2BAA1B,EAA6D,yB,oCCgB7D,EAXkB,SAAC,GAAqC,IAApCI,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAiBC,GAAW,YAC7CC,GAAKC,EAAAA,EAAAA,UAAQ,kBCYH,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACN,EAAIO,GAWvD,OAREP,IAFFO,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CDZQG,EAAL,GAAe,IAElC,OACI,iBAAKf,UAAWgB,EAAhB,WACI,kBAAOC,QAASZ,EAAhB,SAAqBH,KACrB,0BAAOF,UAAWgB,EAAcX,GAAIA,EAAIa,SAAUf,GAAkBC,MAG/E,C,mEEMD,IAnBgB,SAAC,GAA6B,IAA5Be,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,SAC5B,GAA0BC,EAAAA,EAAAA,WAAS,UAAIF,IAAvC,eAAOG,EAAP,KAAcC,EAAd,KAEMpB,GAAeqB,EAAAA,EAAAA,cAAY,YAAe,IAAbC,EAAY,EAAZA,OACxBC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACbJ,GAAS,SAAAK,GACL,OAAO,kBAAIA,GAAX,cAAuBF,EAAOC,GACjC,GACJ,GAAE,CAACJ,IAQJ,MAAO,CAACD,MAAAA,EAAOC,SAAAA,EAAUpB,aAAAA,EAAc0B,aANlB,SAAAC,GACjBA,EAAEC,iBACFX,GAAS,UAAIE,IACbC,GAAS,UAAIJ,GAChB,EAGJ,C,0HCHD,EAhBe,CACRa,MAAO,CACNjC,KAAM,QACN2B,KAAM,QACNO,QAAS,OACT/B,MAAO,QACPgC,YAAa,SAEdC,SAAU,CACTpC,KAAM,WACN2B,KAAM,WACNO,QAAS,OACT/B,MAAO,WACPgC,YAAa,aCRrB,EALqB,CACjBF,MAAO,GACPG,SAAS,ICDb,EAA4B,6B,SCiB5B,EAXkB,SAAC,GAAkB,IAAhBf,EAAe,EAAfA,SACjB,GAA8CgB,EAAAA,EAAAA,GAAQ,CAAEjB,aAAAA,EAAcC,SAAAA,IAA9DE,EAAR,EAAQA,MAAOnB,EAAf,EAAeA,aAAc0B,EAA7B,EAA6BA,aACrBG,EAAoBV,EAApBU,MAAOG,EAAab,EAAba,SACf,OACI,kBAAMf,SAAUS,EAAc7B,UAAWgB,EAAzC,WACI,SAACqB,EAAA,GAAD,QAAWV,MAAOK,EAAO7B,aAAeA,GAAkBmC,EAAAA,SAC1D,SAACD,EAAA,GAAD,QAAWV,MAAOQ,EAAUhC,aAAcA,GAAkBmC,EAAAA,YAC5D,SAACC,EAAA,EAAD,sBAGX,E,UChBD,EAAwB,yBCoBxB,EAjBkB,WAEd,IAAMC,GAAWC,EAAAA,EAAAA,MAOjB,OACI,4BACI,eAAIzC,UAAWgB,EAAf,oBACA,SAAC,EAAD,CAAWI,SARC,SAACsB,GACjBF,GAASG,EAAAA,EAAAA,IAAMD,GAClB,MASJ,C","sources":["webpack://react-homework-template/./src/components/Button/button.module.scss?3bf9","components/Button/Button.jsx","webpack://react-homework-template/./src/components/TextField/textField.module.scss?005a","components/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js","components/hooks/useForm.js","components/LoginForm/fields.js","components/LoginForm/initialState.js","webpack://react-homework-template/./src/components/LoginForm/loginForm.module.scss?0f87","components/LoginForm/LoginForm.jsx","webpack://react-homework-template/./src/components/pages/LoginPage/loginPage.module.scss?aa48","components/pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"button_button__zpxkc\"};","import style from \"./button.module.scss\";\n\nconst Button = ({ children, type= \"submit\" }) => {\n    return <button type={type} className={style.button}>{ children}</button>\n}\nexport default Button;","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"textField_wrapper__BBbYh\",\"field\":\"textField_field__CXIOL\"};","\nimport { useMemo } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport styles from \"./textField.module.scss\";\n\n\nconst TextField = ({label, handleChange, ...props}) => {\n    const id = useMemo(()=> nanoid(), []);\n\n    return (\n        <div className={styles.wrapper}>\n            <label htmlFor={id}>{label}</label>\n            <input className={styles.field} id={id} onChange={handleChange} {...props} />\n        </div>\n    )\n}\n\nexport default TextField;","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import { useState, useCallback } from \"react\";\n\nconst useForm = ({initialState, onSubmit})=> {\n    const [state, setState] = useState({...initialState})\n\n    const handleChange = useCallback(({target}) => {\n        const {name, value} = target;\n        setState(prevState => {\n            return {...prevState, [name]: value}\n        })\n    }, [setState]);\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({...state});\n        setState({...initialState});\n    };\n\n    return {state, setState, handleChange, handleSubmit}\n}\n\nexport default useForm;","const fields = {\n       email: {\n        type: \"email\",\n        name: \"email\",\n        require: \"true\",\n        label: \"Email\",\n        placeholder: \"Email\"\n    },\n       password: {\n        type: \"password\",\n        name: \"password\",\n        require: \"true\",\n        label: \"Password\",\n        placeholder: \"Password\"\n    },\n}\nexport default fields;","const initialState = {\n    email: \"\",\n    password:\"\"\n}\n\nexport default initialState;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"loginForm_container__o4vHA\"};","import TextField from \"components/TextField/TextField\";\nimport Button from \"components/Button/Button\";\nimport useForm from \"components/hooks/useForm\";\nimport fields from \"./fields\";\nimport initialState from \"./initialState\";\nimport styles from \"./loginForm.module.scss\"\n\nconst LoginForm = ({ onSubmit }) => {\n    const { state, handleChange, handleSubmit } = useForm({ initialState, onSubmit });\n    const { email, password } = state;\n    return (\n        <form onSubmit={handleSubmit} className={styles.container}>\n            <TextField value={email} handleChange={ handleChange} {...fields.email} />\n            <TextField value={password} handleChange={handleChange} {...fields.password} />\n            <Button>Login</Button>\n        </form>\n    )\n}\nexport default LoginForm;","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"loginPage_label__0vQPW\"};","import {  useDispatch } from \"react-redux\";\nimport LoginForm from \"../../LoginForm/LoginForm\";\nimport { login } from \"../../redux/Auth/auth-operations\";\nimport styles from \"./loginPage.module.scss\";\nconst LoginPage = () => {\n\n    const dispatch = useDispatch();\n\n    const handleLogin = (data) => {\n        dispatch(login(data));\n    }\n\n\n    return (\n        <div>\n            <h1 className={styles.label}>Login</h1>\n            <LoginForm onSubmit={handleLogin} />\n        </div>\n    )\n}\n\nexport default LoginPage;"],"names":["children","type","className","style","label","handleChange","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","styles","htmlFor","onChange","initialState","onSubmit","useState","state","setState","useCallback","target","name","value","prevState","handleSubmit","e","preventDefault","email","require","placeholder","password","useForm","TextField","fields","Button","dispatch","useDispatch","data","login"],"sourceRoot":""}