{"version":3,"file":"static/js/762.d464abb2.chunk.js","mappings":"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","sources":["components/Phonebook/GetContactForm/initialState.js","webpack://react-homework-template/./src/components/Phonebook/GetContactForm/getContactForm.module.scss?9fe0","components/Phonebook/GetContactForm/GetContactForm.jsx","components/Phonebook/ContactList/contactList.module.scss","components/Phonebook/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Phonebook/FilterContact/filterContact.module.scss?51a2","components/Phonebook/FilterContact/FilterContact.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/contacts/contact-selector.js","components/redux/filter/filter-selector.js","webpack://react-homework-template/./src/components/app.module.scss?d602","components/Phonebook/Phonebook.jsx"],"sourcesContent":["const inititalState = {\n    name: \"\",\n    phone: \"\",\n}\n\nexport default inititalState;","// extracted by mini-css-extract-plugin\nexport default {\"labelForm\":\"getContactForm_labelForm__YH8E7\",\"imputForm\":\"getContactForm_imputForm__CyTEr\",\"labelFormTel\":\"getContactForm_labelFormTel__jb1qj\",\"imputFormTel\":\"getContactForm_imputFormTel__OTsXW\",\"buttonAdd\":\"getContactForm_buttonAdd__4pXUs\"};","import { useState } from 'react';\n\nimport inititalState from './initialState';\nimport styles from  \"../GetContactForm/getContactForm.module.scss\";\n\nconst GetContactForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...inititalState })\n  \n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return {...prevState, [name]: value}\n    })\n  }\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state});\n    setState({ ...inititalState });\n  }\n\n\n  const { name, phone } = state;\n\n  return (\n      <form  onSubmit={handleSubmit}>\n        <label className={styles.labelForm}>\n          Name{' '}\n          <input className={styles.imputForm}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={styles.labelFormTel}>\n          Phone{' '}\n          <input className={styles.imputFormTel}\n            type=\"tel\"\n            name=\"phone\"\n            value={phone}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button className={styles.buttonAdd} type=\"submit\">Add contact</button>\n      </form>\n    );\n}\n\n\nexport default GetContactForm;\n\n","// extracted by mini-css-extract-plugin\nexport default {};","\nimport styles from \"../ContactList/contactList.module.scss\";\n\n\nconst ContactsList = ({removeContact, items}) => {\n\n    const contacts = items.map(({ id, name, phone}) => <li key={id} className={styles.itemContact}>\t{name}: {phone}\n        <button onClick={() => removeContact(id)} type=\"button\" className={styles.buttonItem}>Delete</button></li>);\n\n    return (\n        <ul>\n\n          { contacts}\n        </ul>\n    )\n\n}\n\n\n\n  \n\nexport default ContactsList;\n","// extracted by mini-css-extract-plugin\nexport default {\"inputFilter\":\"filterContact_inputFilter__Wn7h1\",\"labelFilter\":\"filterContact_labelFilter__TBBTt\"};","\nimport styles from \"../FilterContact/filterContact.module.scss\";\n\nconst FilterContact = ({ handleChange, value}) => {\n  return (\n    <label className={styles.labelFilter}>\n      Find contacts by name{' '}\n      <input className={styles.inputFilter} value={value} name=\"filter\" onChange={handleChange} placeholder=\"Filter contacts\"/>\n    </label>\n  );\n};\n\nexport default FilterContact;\n\n\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts?.items;\nexport const filterContacts = state => state.filter?.value;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n\n    \nexport const getFilteredContacts = createSelector(\n  [getAllContacts, filterContacts],\n  (contacts, filtredContacts) =>\n    contacts?.filter(contact =>\n      contact.name.toLowerCase().includes(filtredContacts)\n    )\n);","export const getFilter = ({filter}) => filter;","// extracted by mini-css-extract-plugin\nexport default {\"containerPhonebook\":\"app_containerPhonebook__NCKIK\",\"titlePhone\":\"app_titlePhone__Omzrb\",\"titleContact\":\"app_titleContact__mTzSV\",\"addCont\":\"app_addCont__dGIxD\"};","\nimport { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport GetContactForm from \"./GetContactForm/GetContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport FilterContact from \"./FilterContact/FilterContact\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport { fetchAllContact, fetchAddContact, fetchDeleteContact } from \"../redux/contacts/contact-operations\";\nimport { setFilter } from \"../redux/filter/filter-slice\";\nimport { getFilteredContacts } from \"../redux/contacts/contact-selector\";\nimport { getFilter } from \"../redux/filter/filter-selector\";\nimport styles from \"../app.module.scss\";\nimport { ToastContainer} from 'react-toastify';\nconst Phonebook = () => {\n\n    const filteredContacts = useSelector(getFilteredContacts);\n    const filter = useSelector(getFilter);\n\n    const dispatch = useDispatch();\n    useEffect(()=> {\n        dispatch(fetchAllContact())\n    }, [dispatch])\n\n\n\n    const HandleAddContact = ({ name, phone }) => {\n\n        dispatch(fetchAddContact({ name, phone }));\n    }\n\n    const handleDeleteContact = (id) => {\n        dispatch(fetchDeleteContact(id));\n    }\n    const handleFilter = ({ target }) => {\n        dispatch(setFilter(target.value))\n    }\n\n\n  \n    const isContacts = Boolean(filteredContacts?.length)\n\n    return (\n            <div className={styles.containerPhonebook}>\n                 <h1 className={styles.titlePhone}>Phonebook</h1>\n                <div>\n                    <div>\n                        <GetContactForm onSubmit={HandleAddContact} />\n                    </div>\n                    <div>\n                        <h2 className={styles.titleContact}>Contacts</h2>\n                    <FilterContact value={filter} handleChange={handleFilter} />\n                        {isContacts && <ContactList removeContact={handleDeleteContact} items={filteredContacts} />}\n                    {!isContacts && <p className={styles.addCont}>No any contact! Add new</p>}\n                    <ToastContainer/>\n                    </div>\n                </div>\n            </div>\n        )\n}\n\n\n\nexport default Phonebook;"],"names":["name","phone","onSubmit","useState","inititalState","state","setState","handleChange","target","value","prevState","e","preventDefault","className","styles","type","onChange","pattern","title","required","removeContact","contacts","items","map","id","onClick","placeholder","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getFilteredContacts","filter","filtredContacts","contact","toLowerCase","includes","getFilter","filteredContacts","useSelector","dispatch","useDispatch","useEffect","fetchAllContact","isContacts","Boolean","fetchAddContact","setFilter","ContactList","fetchDeleteContact"],"sourceRoot":""}